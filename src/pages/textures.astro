---
import Main from "@layouts/main.astro";
---

<Main>
  <div class="flex h-full w-full items-center justify-center">
    <canvas id="webgl"></canvas>
  </div>
</Main>

<script>
  import * as THREE from "three";
  import { OrbitControls } from "three/addons/controls/OrbitControls";

  const dimensions = {
    width: 800,
    height: 600,
  };

  const canvas = document.getElementById("webgl");
  const scene = new THREE.Scene();

  const loadingManager = new THREE.LoadingManager();
  const textureLoader = new THREE.TextureLoader(loadingManager);

  const checkerboardTexture = textureLoader.load(
    "/textures/checkerboard-8x8.png",
  );
  const colorTexture = textureLoader.load("/textures/door/color.jpg");
  const minecraftTexture = textureLoader.load("/textures/minecraft.png");
  const alphaTexture = textureLoader.load("/textures/door/alpha.jpg");
  const heightTexture = textureLoader.load("/textures/door/height.jpg");
  const normalTexture = textureLoader.load("/textures/door/normal.jpg");
  const ambientOcclusionTexture = textureLoader.load(
    "/textures/door/ambientOcclusion.jpg",
  );
  const metalnessTexture = textureLoader.load("/textures/door/metalness.jpg");
  const roughnessTexture = textureLoader.load("/textures/door/roughness.jpg");

  minecraftTexture.colorSpace = THREE.SRGBColorSpace;
  minecraftTexture.minFilter = THREE.NearestFilter;
  minecraftTexture.magFilter = THREE.NearestFilter;
  minecraftTexture.rotation = Math.PI * 0.5;

  const object = new THREE.Mesh(
    new THREE.BoxGeometry(1, 1, 1),
    new THREE.MeshBasicMaterial({ map: minecraftTexture }),
  );
  scene.add(object);

  const camera = new THREE.PerspectiveCamera(
    60,
    dimensions.width / dimensions.height,
  );
  camera.position.z = 4;
  camera.lookAt(object.position);
  scene.add(camera);

  const controls = new OrbitControls(camera, canvas);
  controls.enableDamping = true;

  const renderer = new THREE.WebGLRenderer({ canvas });
  renderer.setSize(dimensions.width, dimensions.height);

  const tick = () => {
    controls.update();
    renderer.render(scene, camera);
    requestAnimationFrame(tick);
  };
  tick();
</script>
